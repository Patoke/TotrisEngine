#include <pch.h>
#include "../Piece.hpp"

typedef char PieceMatrix_t[4][4];

// g_pieceBounds[piece][rotation][y][x]

std::array<std::vector<PieceMatrix_t>, PIECE_MAX> g_pieceBounds = {
	{ // std::array
		{ // PIECE_O
			{ // std::vector
				{ 1, 0, 0, 1 }, 
				{ 0, 1, 1, 0 }, 
				{ 1, 0, 1, 0 }, 
				{ 0, 1, 0, 1 }
			},
			{},
			{}
		},
		{},
		{},
		{},
		{},
		{},
		{}
	}
};
//	{ // PIECE_O (this one cannot be rotated, has no pivot point)
//		  { 0, 0, 0, 0 },
//		  { 0, 0, 0, 0 },
//		  { 0, 1, 2, 0 },
//		  { 0, 1, 1, 0 }
//	},
//	{ // PIECE_I
//		{ 0, 0, 1, 0, 0 },
//		{ 0, 0, 1, 0, 0 },
//		{ 0, 0, 2, 0, 0 },
//		{ 0, 0, 1, 0, 0 },
//		{ 0, 0, 0, 0, 0 }
//	},
//	{ // PIECE_S
//		{ 0, 0, 0, 0, 0 },
//		{ 0, 0, 0, 0, 0 },
//		{ 0, 0, 2, 1, 0 },
//		{ 0, 1, 1, 0, 0 },
//		{ 0, 0, 0, 0, 0 }
//	},
//	{ // PIECE_Z
//		{ 0, 0, 0, 0, 0 },
//		{ 0, 0, 0, 0, 0 },
//		{ 0, 1, 2, 0, 0 },
//		{ 0, 0, 1, 1, 0 },
//		{ 0, 0, 0, 0, 0 }
//	},
//	{ // PIECE_L
//		{ 0, 0, 0, 0, 0 },
//		{ 0, 0, 1, 0, 0 },
//		{ 0, 0, 2, 0, 0 },
//		{ 0, 0, 1, 1, 0 },
//		{ 0, 0, 0, 0, 0 }
//	},
//	{ // PIECE_J
//		{ 0, 0, 0, 0, 0 },
//		{ 0, 0, 1, 0, 0 },
//		{ 0, 0, 2, 0, 0 },
//		{ 0, 1, 1, 0, 0 },
//		{ 0, 0, 0, 0, 0 }
//	},
//	{ // PIECE_T
//		{ 0, 0, 0, 0, 0 },
//		{ 0, 0, 0, 0, 0 },
//		{ 0, 1, 2, 1, 0 },
//		{ 0, 0, 1, 0, 0 },
//		{ 0, 0, 0, 0, 0 }
//	}
//};